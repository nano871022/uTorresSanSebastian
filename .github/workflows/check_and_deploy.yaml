name: Prepared project to Compilation Android

on:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  Prepared_code:
    environment: PROD
    runs-on: ubuntu-latest
    outputs:
      VersionCode: ${{ steps.getVersion.outputs.VersionCode }} 
      VersionName: ${{ steps.getVersion.outputs.VersionName }} 

    steps:

      - uses: actions/checkout@v4

      - uses: ./.github/actions/prepare
        with: 
          SECRET_TOKEN: ${{ secrets.GH_PROPERTIES_CONNECT }}

      - name: get version code and name of app
        id: getVersion
        run: |
              VERSION_CODE=$(grep -m 1 'versionCode' app/build.gradle | awk '{print $2}')
              VERSION_NAME=$(grep -m 1 'versionName' app/build.gradle | awk -F '"' '{print $2}')
              echo "VersionCode=$VERSION_CODE" >> $GITHUB_OUTPUT
              echo "VersionName=$VERSION_NAME" >> $GITHUB_OUTPUT
              
      - name: Show version information
        run: |
             echo "Version Code: ${{ steps.getVersion.outputs.VersionCode }}"
             echo "Version Name: ${{ steps.getVersion.outputs.VersionName }}"
      
      - name: added signing in gradle
        run: |
            cat << EOF >> app/build.gradle
              android {
                signingConfigs {
                  create("release") {
                    storeFile = file("./torressansebastian.jks")
                    storePassword = "${{ secrets.SIGNING_STORE_PASSWORD }}"
                    keyAlias = "${{ secrets.SIGNING_KEY_ALIAS }}"
                    keyPassword = "${{ secrets.SIGNING_KEY_PASSWORD }}"
                  }
                }

              buildTypes {
                getByName("release") {
                  signingConfig = signingConfigs.getByName("release")
                }
              }
            }
            EOF

      - name: build and scan
        continue-on-error: true
        run: ./gradlew bundleRelease --no-daemon --no-parallel --info # build --scan --warning-mode all --stacktrace --info
      
      - name: Upload builds reports 
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-reports
          path: |
                **/build/reports/
                /home/runner/_temp/.gradle-actions/build-results/

      - name: Upload Build Release
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-release
          path: |
                ./app/build/outputs/bundle/release/

  test-task:
   uses: ./.github/workflows/test-lint.yaml
   secrets:
     GH_PROPERTIES_CONNECT: ${{ secrets.GH_PROPERTIES_CONNECT }}

  Deploy_AppStore_Android:
    runs-on: ubuntu-latest
    needs: Prepared_code
    environment: PROD
    
    steps:

      - uses: actions/download-artifact@v4
        with:
          path: ./
          name: build-release

      - name: Check files
        run: ls -lnR

      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}
          packageName: co.japl.android.torressansebastian
          releaseFiles: ./app-release.aab
          track: internal
          inAppUpdatePriority: 0
          status: completed

  Create_Tag:
    runs-on: ubuntu-latest
    needs: [Deploy_AppStore_Android,Prepared_code]
    
    steps:

      - uses: actions/checkout@v4
      
      - name: Create Git Tag
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
              TAG_NAME="v${{ needs.Prepared_code.outputs.VersionCode }}"
              git config --local user.email "actions-urtss@japl.dev"
              git config --local user.name "Actions URTss"
              git tag -a "$TAG_NAME" -m "${{ needs.Prepared_code.outputs.VersionName }}"
              git push origin "$TAG_NAME"
